/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clienteservichat;

import javax.swing.JOptionPane;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author quique
 */
public class InterfazChat extends javax.swing.JFrame {

    /**
     * Creates new form InterfazChat
     */
    public InterfazChat() {

        initComponents();
        intrNickname();
        opcionesInterfaz();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boConectar = new javax.swing.JButton();
        txtPuerto = new javax.swing.JTextField();
        txtIP = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPantallaChat = new javax.swing.JTextArea();
        boEnviarMsg = new javax.swing.JButton();
        txtMensaje = new javax.swing.JTextField();
        txtInformativo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                cerrarConexion(evt);
            }
        });

        boConectar.setText("Conectar");
        boConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boConectarActionPerformed(evt);
            }
        });

        jLabel1.setText("IP");

        jLabel2.setText("Puerto");

        txtPantallaChat.setEditable(false);
        txtPantallaChat.setColumns(20);
        txtPantallaChat.setRows(5);
        jScrollPane1.setViewportView(txtPantallaChat);

        boEnviarMsg.setText("Enviar");
        boEnviarMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boEnviarMsgActionPerformed(evt);
            }
        });

        txtInformativo.setText("* Campos Obligatorios");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtInformativo))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(boEnviarMsg)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(boConectar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPuerto)
                                    .addComponent(txtIP))))
                        .addGap(6, 6, 6))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(txtInformativo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(boConectar))
                    .addComponent(boEnviarMsg))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boConectarActionPerformed
        /**
         * Boton para la conexion, Si la ip o el puerto están vacíos que no deje
         * conectarse.
         */
        if (txtIP.getText().equalsIgnoreCase("")
                || txtIP.getText().isEmpty()
                || txtPuerto.getText().isEmpty()
                || txtPuerto.getText().equalsIgnoreCase("")) {
            txtInformativo.setVisible(true);
        } else {
            m.conexion(txtIP.getText(), Integer.parseInt(txtPuerto.getText()), nickname);
            boEnviarMsg.setEnabled(true);
            txtMensaje.setEditable(true);
            txtIP.setText("");
            txtPuerto.setText("");
            txtPuerto.setEditable(false);
            txtIP.setEditable(false);
            hilo h = new hilo(m);
            h.start();
        }
    }//GEN-LAST:event_boConectarActionPerformed

    private void boEnviarMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boEnviarMsgActionPerformed
        /**
         * Si el txtMensaje está vacío muestra un mensaje que dice que
         * introduzcas un mensaje Si no llama al método enviar mensaje de la
         * clase MetodosClientes.
         */
        if (txtMensaje.getText().isEmpty() || txtMensaje.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Escribe un mensaje");
        } else {
            m.enviarMensaje(txtMensaje.getText());
            txtMensaje.setText("");
        }
    }//GEN-LAST:event_boEnviarMsgActionPerformed

    
    /**
     * Metodo que sirve para confirmar si quieres cerrar el programa cuando pulsas la x
     * y que envía un mensaje de cerrado al servidor si lo haces.
     * @param evt Evento del boton X.
     */
    private void cerrarConexion(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_cerrarConexion

        if (JOptionPane.showConfirmDialog(null, "Desea salir del chat?",
                "Salir de la aplicación",
                JOptionPane.YES_NO_OPTION)
                == JOptionPane.YES_OPTION) {
            m.enviarMensaje("/bye");
            System.exit(0);
        }
    }//GEN-LAST:event_cerrarConexion

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazChat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton boConectar;
    public javax.swing.JButton boEnviarMsg;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField txtIP;
    public javax.swing.JLabel txtInformativo;
    public javax.swing.JTextField txtMensaje;
    public static javax.swing.JTextArea txtPantallaChat;
    public javax.swing.JTextField txtPuerto;
    // End of variables declaration//GEN-END:variables

    MetodosClientes m = new MetodosClientes();
    String nickname = "";

    /**
     * Metodo que sirve para introducir el nickname, mientras esté en blanco te
     * sigue pidiendo que lo introduzcas.
     */
    private void intrNickname() {
        while (nickname.isEmpty() || nickname.equalsIgnoreCase("")) {
            nickname = JOptionPane.showInputDialog("Introduce tu nickname");
        }
    }

    /**
     * Metodo que configura la interfaz, bloqueando botones, textfields, y
     * añadiendo un titulo con el nickname al frame.
     */
    private void opcionesInterfaz() {
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setTitle("Bienvenido/a " + nickname + "!");
        txtMensaje.setEditable(false);
        boEnviarMsg.setEnabled(false);
        txtInformativo.setVisible(false);
        /**
         * Metodo importado de la libreria xswingx que muestra un mensaje
         * predeterminado en el textfield donde introduces el mensaje.
         */
        PromptSupport.setPrompt("Escribe un mensaje", txtMensaje);
    }

}

class hilo extends Thread {

    MetodosClientes m;
    String msg;

    public hilo(MetodosClientes m) {
        this.m = m;
    }

    @Override
    public void run() {
        /**
         * Hilo en el cliente que sirve para quedarse siempre recibiendo
         * mensajes.
         */
        while (true) {
             msg = m.recibirMensaje();
            InterfazChat.txtPantallaChat.setText(InterfazChat.txtPantallaChat.getText() + msg);
        }
    }
}
